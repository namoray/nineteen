services:
  client_node:
    ports:
      - "8000:8000"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgresql
      POSTGRES_PORT: 5432
      POSTGRES_NAME: mydb
      ENV: dev
    container_name: dev_client_node

  query_node:
    deploy:
      replicas: 1
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgresql
      POSTGRES_PORT: 5432
      POSTGRES_NAME: mydb
      ENV: dev
      NETUID: 19
      container_name: dev_query_node

  chain_node:
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgresql
      POSTGRES_PORT: 5432
      POSTGRES_NAME: mydb
      RUN_ONCE: "false"
      DUMMY: "false"
      NETUID: 19
      ENV: dev
      NETWORK: finney
      SECONDS_BETWEEN_SYNC: 120
    container_name: dev_chain_node

  control_center:
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgresql
      POSTGRES_PORT: 5432
      POSTGRES_NAME: mydb
      ENV: dev
    container_name: dev_control_center

  signing_service:
    environment:
      WALLET_NAME: t_and_c
      HOTKEY_NAME: default
      ENV: dev
    container_name: dev_signing_service

  postgresql:
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
      POSTGRES_PORT: 5432
      POSTGRES_NAME: mydb
    volumes:
      - ./postgres_data:/host_postgres_data
    container_name: 0_dev_postgresql

  dbmate:
    image: amacneil/dbmate
    environment:
      DATABASE_URL: postgres://user:password@postgresql:5432/mydb?sslmode=disable
    volumes:
      - ./validator/db:/db
    command: up
    depends_on:
      postgresql:
        condition: service_healthy
    networks:
      - postgres_network
    container_name: 0_dbmate